@use 'utils' as *;

.section-products {
  @include responsive-grid;

  &__page-title {
    margin-bottom: $margin-smaller;

    @include grid-placement(1, 2);
  }

  &__subtitle {
    @include base-font($f-paragraph-pc, $f-line-height-big);

    margin-bottom: $margin-regular;

    @include grid-placement(2, 3);

    @include responsive-settings-min($media-tablet) {
      margin-bottom: $margin-medium;
    }
  }

  &__all-products {
    @include grid-placement(3, 4);
    @include responsive-grid;
  }

  &__product-container {
    display: flex;
    flex-direction: column;
    height: 492px;
    margin-bottom: $margin-regular;
    transform: scale(1);
    transition: all $duration;

    &:hover {
      transform: scale(1.03);
    }

    @include responsive-settings-min($media-tablet) {
      height: 560px;
      margin-bottom: $margin-medium;
    }

    @include responsive-settings-min($media-laptop) {
      height: 648px;
    }

    @include responsive-settings-min($media-pc) {
      width: 432px;
      height: 696px;
    }

    &:last-of-type {
      margin-bottom: 0;
    }

    @for $i from 1 through $products-quantity {
      &:nth-of-type(#{$i}) {
        @include grid-placement($i, $i + 1);

        @include responsive-settings-min($media-tablet) {
          @if $i % 2 == 1 {
            @include grid-placement(
              calc(($i + 1) / 2),
              calc(($i + 1) / 2) + 1,
              1,
              5
            );
          } @else {
            @include grid-placement(calc($i / 2), calc($i / 2) + 1, 5, -1);
          }
        }

        @include responsive-settings-min($media-laptop) {
          @for $i from 1 through $products-quantity {
            &:nth-of-type(#{$i}) {
              @if $i % 4 == 1 {
                @include grid-placement(
                  calc(($i + 1) / 2),
                  calc(($i + 1) / 2) + 1,
                  1,
                  4
                );
              } @else if $i % 4 == 2 {
                @include grid-placement(calc($i / 2), calc($i / 2) + 1, 4, 7);
              } @else if $i % 4 == 3 {
                @include grid-placement(
                  calc(($i + 1) / 2),
                  calc(($i + 1) / 2) + 1,
                  3,
                  6
                );
              } @else if $i % 4 == 0 {
                @include grid-placement(calc($i / 2), calc($i / 2) + 1, 6, -1);
              }
            }
          }
        }
      }
    }

    @include responsive-settings-min($media-tablet) {
      margin-bottom: $margin-medium;

      &:nth-last-of-type(1),
      &:nth-last-of-type(2) {
        margin-bottom: 0;
      }
    }
  }

  &__image {
    width: 100%;
    height: 100%;
    min-height: 200px;
    border-radius: 8px;
    object-fit: cover;
    object-position: center;
    margin-bottom: $margin-tiny;
  }

  &__category {
    @include base-font(
      $f-paragraph-pc,
      $f-paragraph-pc,
      $f-letter-spacing-medium,
      $f-bold
    );

    color: $grey;
    text-transform: uppercase;
    margin-bottom: 8px;
  }

  &__description {
    @include base-font($f-paragraph-pc, $f-line-height-big);

    margin-bottom: $margin-smaller;
  }

  &__order-button {
    background-color: transparent;
    width: 77px;
    border: none;

    @include base-font(
      $f-paragraph-pc,
      $f-paragraph-pc,
      $f-letter-spacing-medium,
      $f-bold
    );

    text-transform: uppercase;
    color: $accent-orange;
    display: flex;
    align-items: center;
    padding: 0;
    cursor: pointer;

    &--link {
      text-decoration: none;
    }

    &::before {
      content: '';
      background-image: url(/src/images/Icons/Arrow-icon.svg);

      @include squared-size(24px);

      display: inline-block;
      background-repeat: no-repeat;
      background-position: center;
      margin-right: 4px;
      opacity: 1;
      visibility: visible;
      transition: opacity $duration;
    }

    &:hover::before {
      animation: move-arrow $duration;
    }
  }
}
